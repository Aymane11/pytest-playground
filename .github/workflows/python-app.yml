name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '*.md'

jobs:
  ci:
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.13]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
    - name: Setup Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install wheel
      run: python -m pip install wheel

    - name: Install poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Cache Poetry virtualenv
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}-py${{ matrix.python-version }}-os${{ matrix.os }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}-py${{ matrix.python-version }}-os${{ matrix.os }}

    - name: Config Poetry
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies using Poetry
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run test suite
      run: poetry run coverage run -m pytest && coverage report -m && coverage xml